Installing pgAdmin from source
==============================

This document describes how to build pgAdmin from source on *nix, Mac and 
Windows.

Linux, FreeBSD, Solaris and other unix variants
-----------------------------------------------

You will need:

- A modern development environment: 

    - GTK 2.2 or above.
    - GNU automake 1.9 or above.
    - GNU autoconf 2.59 or above.
    - GNU gcc 3.4 or above.

- wxGTK 2.6.4 from http://www.wxwidgets.org/
- PostgreSQL 8.0 from http://www.postgresql.org/

Building:

1) Install PostgreSQL per the instructions included. It is recommended that you
   build with OpenSSL support, using the --with-openssl configure option.
   
2) Unpack the wxGTK tarball to a convenient location, and build and install it
   as follows:
   
     cd /path/to/wxGTK/source/
     ./configure --with-gtk --enable-gtk2 --enable-unicode
     make
     sudo make install

     # Install wxWidgets contrib modules.
     cd contrib/
     make
     sudo make install
	
3) Unpack the pgAdmin tarball to a convenient location, and build and install it 
   as follows:
   
     sh bootstrap	# Required only if building from an SVN checkout
     ./configure
     make all
     sudo make install
	 
   If any of the prerequisite components are installed in locations that the 
   configure script cannot find, you may specify their locations on the command
   line. See the configure help (./configure --help) for details.
   
Mac OS X
--------

You will need:

- A modern development environment: 

    - XCode 2.0 or above
    - GNU automake 1.9 or above.
    - GNU autoconf 2.59 or above.

- wxMac 2.6.x from http://www.wxwidgets.org/
- PostgreSQL 8.0 or above from http://www.postgresql.org/

Building:

1) Install PostgreSQL per the instructions included. It is recommended that you
   build with OpenSSL support, using the --with-openssl configure option.
   
2) Unpack the wxMac tarball to a convenient location, and build and install it
   as follows:
   
     cd /path/to/wxMac/source/
     ./configure --with-mac --enable-gtk2 --enable-unicode
     make
     sudo make install

     # Install wxWidgets contrib modules.
     cd contrib/
     make
     sudo make install
	
3) Unpack the pgAdmin tarball to a convenient location, and build and install it 
   as follows:
   
     sh bootstrap	# Required only if building from an SVN checkout
     ./configure --enable-appbundle
     make all
     make install
	 
   This final step will build an OSX appbundle called pgAdmin3.app in the root 
   of your source tree. As this can take a minute or two, the 
   pkg/mac/debug-bundle.sh script may be used to build a non-relocatable 'fake' 
   appbundle using symbolic links directly to the executable files. This 
   appbundle is called pgAdmin3-debug.app, and doesn't need to be rebuilt when 
   pgAdmin is recompiled.
   
   If any of the prerequisite components are installed in locations that the 
   configure script cannot find, you may specify their locations on the command
   line. See the configure help (./configure --help) for details.
   
Windows
-------

You will need:

- Windows 2000 or above.
- Microsoft Visual C++ 6.0.
- wxMSW 2.6.4 from http://www.wxwidgets.org/
- PostgreSQL 8.0 from http://www.postgresql.org/

Building:

Note: All dependencies except for PostgreSQL must be installed under a 
      directory referred to as $BUILD_ROOT from here on. This can be located
      whereever you prefer.

1) Unpack the wxMSW source code $BUILD_ROOT/pgadmin3-deps/wxwidgets 
   
2) Install PostgreSQL to the default location using the community installer. 
   
3) Unpack the pgAdmin source code to $BUILD_ROOT/pgadmin3.

4) Copy the setup.h file from xtra/wx-build in the pgAdmin source tree to the 
   include/wx and include/wxmsw directories in the wxMSW source tree. Load
   the wxWidgets project in Visual Studio and batch build the libraries. To
   save time the "DLL" and "Universal" builds may be omitted. The ogl and stc
   contrib modules are also required.

5) Start Visual C++ and load the pgAdmin project file. Build the required 
   targets.

